{"version":3,"file":"static/js/458.53cad80a.chunk.js","mappings":"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","sources":["pages/MovieStyled.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  font-family: 'Arial', sans-serif;\n  padding: 30px;\n  background-color: #f4f4f4;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  font-size: 1rem;\n  width: 300px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  margin-right: 10px;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 10px 20px;\n  font-size: 1rem;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  font-size: 1.2rem;\n  text-align: center;\n  margin-top: 20px;\n`;\n\nexport const MovieList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  padding: 10px;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const PosterImage = styled.img`\n  width: 100%;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\nexport const MovieTitle = styled.h3`\n  font-size: 1.2rem;\n  color: #333;\n  margin-top: 10px;\n  text-align: center;\n  font-weight: bold;\n`;\n\nexport const NoResults = styled.div`\n  font-size: 1.5rem;\n  text-align: center;\n  margin-top: 20px;\n  color: #888;\n`;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  Container,\n  SearchForm,\n  SearchInput,\n  SearchButton,\n  ErrorMessage,\n  MovieList,\n  MovieItem,\n  PosterImage,\n  MovieTitle,\n  NoResults,\n} from './MovieStyled';\nconst API_KEY = 'a4e0e6c94492c515df52f4a6ebcc54c7';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      fetchMovies(query);\n    }\n  }, [searchParams]);\n\n  const fetchMovies = async query => {\n    try {\n      const response = await axios.get(`${BASE_URL}/search/movie`, {\n        params: {\n          api_key: API_KEY,\n          query,\n        },\n      });\n\n      setSearchResults(response.data.results);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!searchQuery) return;\n    setSearchParams({ query: searchQuery });\n    fetchMovies(searchQuery);\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          placeholder=\"Search for movies\"\n          onChange={handleChange}\n          value={searchQuery}\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </SearchForm>\n\n      {error && <ErrorMessage>Error loading movies!</ErrorMessage>}\n\n      {searchResults.length > 0 ? (\n        <MovieList>\n          {searchResults.map(movie => {\n            const imgUrl = movie.poster_path\n              ? `${IMAGE_BASE_URL}${movie.poster_path}`\n              : null;\n            return (\n              <MovieItem key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {imgUrl && <PosterImage src={imgUrl} alt={movie.title} />}\n                  <MovieTitle>{movie.title}</MovieTitle>\n                </Link>\n              </MovieItem>\n            );\n          })}\n        </MovieList>\n      ) : (\n        <NoResults>No results found</NoResults>\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","SearchForm","_templateObject2","SearchInput","_templateObject3","SearchButton","_templateObject4","ErrorMessage","_templateObject5","MovieList","_templateObject6","MovieItem","_templateObject7","PosterImage","_templateObject8","MovieTitle","_templateObject9","NoResults","_templateObject10","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","useEffect","query","get","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","params","api_key","sent","data","results","t0","stop","_x","apply","arguments","handleSubmit","_ref2","_callee2","e","_context2","preventDefault","abrupt","_x2","_jsxs","children","onSubmit","_jsx","type","placeholder","onChange","target","value","length","map","movie","imgUrl","poster_path","Link","to","id","state","from","src","alt","title"],"sourceRoot":""}