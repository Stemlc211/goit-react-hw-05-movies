{"version":3,"file":"static/js/253.c9410762.chunk.js","mappings":"qRAEaA,EAAmBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+FAM7BC,EAAcH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4DAMvBG,EAAaL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yOAatBK,EAAeP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sEAMvBO,EAAgBT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,mEAMxBS,EAAeX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2FAOzBW,EAAYb,EAAAA,GAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,4F,SCgBnC,EA/CgB,WACd,IAAQa,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAqBtB,OAnBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,EAAAA,EAAAA,IAAU,GAADC,OAVvB,+BAWI,WAAAA,OAAUvB,EAAO,YAC5B,CACEwB,OAAQ,CACNC,QAfE,sCAkBN,KAAD,EAPKP,EAAQC,EAAAO,KAQdnB,EAAWW,EAASS,KAAKC,SAAST,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAElCR,EAAS,kCAAkC,yBAAAQ,EAAAW,OAAA,GAAAb,EAAA,kBAE9C,kBAdiB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAelBnB,GACF,GAAG,CAACb,IAEAU,GACKuB,EAAAA,EAAAA,KAACrC,EAAY,CAAAsC,SAAExB,IAGD,IAAnBJ,EAAQ6B,QACHF,EAAAA,EAAAA,KAACnC,EAAS,CAAAoC,SAAC,0BAIlBE,EAAAA,EAAAA,MAACpD,EAAgB,CAAAkD,SAAA,EACfD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACJD,EAAAA,EAAAA,KAAC7C,EAAW,CAAA8C,SACT5B,EAAQ+B,KAAI,SAAAC,GAAM,OACjBF,EAAAA,EAAAA,MAAC9C,EAAU,CAAA4C,SAAA,EACTD,EAAAA,EAAAA,KAACzC,EAAY,CAAA0C,SAAEI,EAAOC,UACtBN,EAAAA,EAAAA,KAACvC,EAAa,CAAAwC,SAAEI,EAAOE,YAFRF,EAAOG,GAGX,QAKvB,C","sources":["components/ReviewsStyled.jsx","components/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n  background-color: #f9f9f9;\n`;\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  background-color: white;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const ReviewerName = styled.p`\n  font-weight: bold;\n  font-size: 1.1rem;\n  color: #333;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 1rem;\n  color: #555;\n  margin-top: 10px;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  font-size: 1.2rem;\n  text-align: center;\n  margin-top: 20px;\n`;\n\nexport const NoReviews = styled.div`\n  text-align: center;\n  font-size: 1.5rem;\n  color: #888;\n  margin-top: 20px;\n`;\n","import { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport {\n  ReviewsContainer,\n  ReviewsList,\n  ReviewItem,\n  ReviewerName,\n  ReviewContent,\n  ErrorMessage,\n  NoReviews,\n} from './ReviewsStyled';\nconst API_KEY = 'a4e0e6c94492c515df52f4a6ebcc54c7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/movie/${movieId}/reviews`,\n          {\n            params: {\n              api_key: API_KEY,\n            },\n          }\n        );\n        setReviews(response.data.results);\n      } catch (error) {\n        setError('Problems with fetching reviews');\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  if (error) {\n    return <ErrorMessage>{error}</ErrorMessage>;\n  }\n\n  if (reviews.length === 0) {\n    return <NoReviews>No reviews available</NoReviews>;\n  }\n\n  return (\n    <ReviewsContainer>\n      <h2>Reviews</h2>\n      <ReviewsList>\n        {reviews.map(review => (\n          <ReviewItem key={review.id}>\n            <ReviewerName>{review.author}</ReviewerName>\n            <ReviewContent>{review.content}</ReviewContent>\n          </ReviewItem>\n        ))}\n      </ReviewsList>\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsContainer","styled","_templateObject","_taggedTemplateLiteral","ReviewsList","_templateObject2","ReviewItem","_templateObject3","ReviewerName","_templateObject4","ReviewContent","_templateObject5","ErrorMessage","_templateObject6","NoReviews","_templateObject7","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","params","api_key","sent","data","results","t0","stop","apply","arguments","_jsx","children","length","_jsxs","map","review","author","content","id"],"sourceRoot":""}